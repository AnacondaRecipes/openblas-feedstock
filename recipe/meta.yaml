{% set version = "0.3.29" %}
{% set build_number = 0 %}

# ensure INTERFACE64 variable gets detected by conda-build
# [INTERFACE64 == "foobar"]

package:
  name: openblas-split
  version: {{ version }}

source:
  url: https://github.com/OpenMathLib/OpenBLAS/archive/v{{ version }}.tar.gz
  sha256: 38240eee1b29e2bde47ebb5d61160207dc68668a54cac62c076bb5032013b1eb
  patches:
    # don't run test_fork, it has a tendency to hang indefinitely
    - patches/0001-skip-fork-test-with-openmp.patch

build:
  number: {{ build_number }}
  string: openmp_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 1]
  string: pthreads_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 0]
  skip: true  # [win]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ compiler("fortran") }}
    - perl
    - make                    # [not win]
    - cmake                   # [win]
    - ninja                   # [win]
    - patch                   # [unix]
    - m2-patch                # [win]
    - objconv                 # [osx]
    - llvm-openmp  # [USE_OPENMP == 1 and osx]
    - libgomp      # [USE_OPENMP == 1 and linux] 
  host:
    - llvm-openmp-fortran     # [win and USE_OPENMP == 1]
  run:

outputs:
  - name: libopenblas{{ name_suffix }}
    build:
      string: openmp_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 1]
      string: pthreads_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 0]
      track_features:
        # weigh down openmp (except on osx, where it is the only option)
        - openblas_threading_openmp     # [(not osx) and USE_OPENMP == 1]
      run_exports:
        - {{ pin_subpackage("libopenblas" ~ name_suffix) }}
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("fortran") }}
        - llvm-openmp  # [USE_OPENMP == 1 and osx]
        - libgomp      # [USE_OPENMP == 1 and linux] 
      run_constrained:
        - {{ pin_subpackage("openblas" ~ name_suffix, max_pin="x.x.x") }}
    files:
      # Include files like
      #   - libopenblasp-r0.3.5.so
      #   - libopenblas_vortexp-r0.3.5.so
      #   - libopenblas.so.0
      # Avoid files
      #   - libopenblas.so
      - lib/libopenblas{{ SYMBOLSUFFIX }}*p*{{ SHLIB_EXT }}  # [not win]
      - lib/libopenblas{{ SYMBOLSUFFIX }}.so.*               # [linux]
      - lib/libopenblas{{ SYMBOLSUFFIX }}.*.dylib            # [osx]
      - Library/bin/openblas{{ SYMBOLSUFFIX }}.dll           # [win]
    test:
      requires:
        - python *
      commands:
        - test -f ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}p-r{{ version }}{{ SHLIB_EXT }}                                    # [not win]
        - nm -g ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}p-r{{ version }}{{ SHLIB_EXT }} | grep dsecnd                        # [osx and build_platform=="osx-64"]
        - python -c "import ctypes; ctypes.cdll['${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}p-r{{ version }}{{ SHLIB_EXT }}']"  # [not win]
        - if not exist %PREFIX%\\Library\\bin\\openblas{{ SYMBOLSUFFIX }}.dll exit 1                                            # [win]

  - name: openblas{{ name_suffix }}
    build:
      string: openmp_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 1]
      string: pthreads_h{{ PKG_HASH }}_{{ build_number }}  # [USE_OPENMP == 0]
      track_features:
        - openblas_threading_openmp     # [(not osx) and USE_OPENMP == 1]
    files:
      - include/*.h                                       # [not win]
      - lib/libopenblas{{ SYMBOLSUFFIX }}*.a              # [not win]
      - lib/libopenblas{{ SYMBOLSUFFIX }}{{ SHLIB_EXT }}  # [not win]
      - lib/pkgconfig/openblas.pc                         # [not win]
      - lib/cmake/openblas/*                              # [not win]
      - Library/include/openblas                          # [win]
      - Library/lib/openblas{{ SYMBOLSUFFIX }}.lib        # [win]
      - Library/lib/pkgconfig/openblas.pc                 # [win]
      - Library/share/cmake/OpenBLAS                      # [win]
    requirements:
      run:
        - {{ pin_subpackage("libopenblas" ~ name_suffix, exact=True) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}.a                       # [not win]
        - test -f ${PREFIX}/lib/libopenblas{{ SYMBOLSUFFIX }}{{ SHLIB_EXT }}          # [not win]
        - if not exist %PREFIX%\\Library\\lib\\openblas{{ SYMBOLSUFFIX }}.lib exit 1  # [win]

about:
  home: http://www.openmathlib.org/OpenBLAS/
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - LICENSE
    - lapack-netlib/LICENSE
  summary: An optimized BLAS library based on GotoBLAS2 1.13 BSD version  # [SYMBOLSUFFIX != "64_"]
  summary: An optimized BLAS library (ILP64 interface) based on GotoBLAS2 1.13 BSD version  # [SYMBOLSUFFIX == "64_"]
  description: |
    OpenBLAS implements low-level routines for performing linear algebra 
    operations such as vector addition, scalar multiplication, dot products, 
    linear combinations, and matrix multiplication. OpenBLAS makes these 
    routines available on multiple platforms, covering server, desktop 
    and mobile operating systems, as well as different architectures 
    including x86, ARM, MIPS, PPC, RISC-V, and zarch.
  dev_url: https://github.com/OpenMathLib/OpenBLAS
  doc_url: http://www.openmathlib.org/OpenBLAS/docs/

extra:
  recipe-maintainers:
    - gillins
    - groutr
    - jakirkham
    - isuruf
    - h-vetinari
  feedstock-name: openblas
